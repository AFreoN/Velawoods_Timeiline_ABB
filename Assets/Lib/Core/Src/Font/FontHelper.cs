using TMPro;using System.IO;using System.Xml;using UnityEngine;using System.Collections;using System.Collections.Generic;using System.Text.RegularExpressions;public class FontHelper{    public static string swappableFontFolderPath = Application.dataPath + "/Assets/Font/CharacterSets/Resources/";    public static void CheckForFontSwap(TextMeshProUGUI tmProElement)    {        if (!Application.isPlaying || string.IsNullOrEmpty(tmProElement.text))            return;        if (Regex.IsMatch(tmProElement.text, RegexCharSet_Latin.negativeCharSetRegex))        {            NonLatinTextFixer nonLatinTextFixerComponent = tmProElement.GetComponent<NonLatinTextFixer>();            if (nonLatinTextFixerComponent == null)            {                nonLatinTextFixerComponent = tmProElement.gameObject.AddComponent<NonLatinTextFixer>();                nonLatinTextFixerComponent.isBoldLatinText = tmProElement.font.name.Contains("BOLD");            }            if (Regex.IsMatch(tmProElement.text, RegexCharSet_ar.charSetRegex))            {                if (nonLatinTextFixerComponent.nonLatinTextType != NonLatinTextTypes.ARABIC)                {                    nonLatinTextFixerComponent.UpdateNonLatinTextType(NonLatinTextTypes.ARABIC);                    SwapTMProFont(tmProElement, "Arabic");                }                else                {                    nonLatinTextFixerComponent.ForceUpdate();                }            }            else if (Regex.IsMatch(tmProElement.text, RegexCharSet_jp.charSetRegex))            {                if (nonLatinTextFixerComponent.nonLatinTextType != NonLatinTextTypes.JAPANESE)                {                    nonLatinTextFixerComponent.UpdateNonLatinTextType(NonLatinTextTypes.JAPANESE);                    SwapTMProFont(tmProElement, "Japanese");                }                else                {                    nonLatinTextFixerComponent.ForceUpdate();                }            }        }        else        {            bool wasBold = false;            NonLatinTextFixer nonLatinTextFixerComponent = tmProElement.GetComponent<NonLatinTextFixer>();            if (nonLatinTextFixerComponent != null)            {                wasBold = nonLatinTextFixerComponent.isBoldLatinText;                GameObject.DestroyImmediate(nonLatinTextFixerComponent);                if (wasBold || tmProElement.font.name.Contains("BOLD"))                    SwapTMProFont(tmProElement, "Latin_BOLD");                else                    SwapTMProFont(tmProElement, "Latin_REGULAR");            }        }    }    public static void SwapTMProFont(TextMeshProUGUI tmProElement, string languageID)    {        TMP_FontAsset languageFont = Resources.Load<TMP_FontAsset>(languageID + "_Font");        if (languageFont != null && tmProElement.font != languageFont)        {            tmProElement.font = Resources.Load<TMP_FontAsset>(languageID + "_Font");        }    }}